{"version":3,"sources":["components/ContainerProduct.js","serviceWorker.js","index.js"],"names":["ContainerProduct","props","state","items","newProductData","nombre_producto","referencia","precio","peso","categoria","stock","fecha_venta","editProductData","newProductModal","editProductModal","this","_refreshProduct","setState","console","log","axios","post","then","response","push","data","catch","error","put","id","delete","get","map","item","key","fecha_creacion","Button","color","size","onClick","editProduct","bind","deleteProduct","className","toggleNewProductModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","type","placeholder","value","onChange","e","target","name","ModalFooter","addProduct","toggleEditProductModal","updateProduct","Table","striped","bordered","hover","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5e71d015.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport {Table,Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input, FormGroup } from 'reactstrap';\n\n\nclass ContainerProduct extends React.Component {\n    constructor(props) {\n        super()\n        this.state = {            \n            items: [],\n            newProductData:{\n               nombre_producto: '',\n               referencia: '',\n               precio: '',\n               peso: '',\n               categoria: '',\n               stock: '',\n               fecha_venta:''\n            },\n            editProductData:{\n                nombre_producto: '',\n                referencia: '',\n                precio: '',\n                peso: '',\n                categoria: '',\n                stock: '',\n                fecha_venta:''\n             },\n            newProductModal: false,\n            editProductModal: false,\n        }\n    }\n    componentWillMount() {\n       this._refreshProduct();\n\n    }\n\n    toggleNewProductModal(){\n        this.setState({\n            newProductModal:!this.state.newProductModal\n        });\n        //this.state.newProductModal = true;\n\n    }   \n    toggleEditProductModal(){\n        this.setState({\n            editProductModal:!this.state.editProductModal\n        });\n        //this.state.newProductModal = true;\n\n    }  \n    addProduct(){\n        console.log(\"hello\");\n        let {nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta} = this.state.newProductData;\n        axios.post('http://localhost/api/view/product.php', {\n            nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta\n        }).then((response) => {\n               let{ items } = this.state;\n               items.push(response.data);\n               this.setState({items, newProductModal: false, newProductData: {\n                nombre_producto: '',\n                referencia: '',\n                precio: '',\n                peso: '',\n                categoria: '',\n                stock: '',\n                fecha_venta:''  \n               }});\n                console.log(response.data);\n            })\n            .catch(function (error) {\n                //handle error\n                console.log(error);\n            });\n    }\n    updateProduct(){\n        let {nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta} = this.state.editProductData; \n        axios.put('http://localhost/api/view/product.php?id=' + this.state.editProductData.id,{\n            nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta\n        }).then((response) => {\n          this._refreshProduct();\n          this.setState({\n              editProductModal:false, editProductData: {\n                nombre_producto: '',\n                referencia: '',\n                precio: '',\n                peso: '',\n                categoria: '',\n                stock: '',\n                fecha_venta:''  \n               }\n          })          \n             //console.log(response.data);\n         })\n         .catch(function (error) {\n             //handle error\n             console.log(error);\n         });\n\n    }\n    \n    editProduct(id, nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta){\n        this.setState({\n            editProductData:{id, nombre_producto, referencia, precio, peso, categoria, stock, fecha_venta}, editProductModal:!this.state.editProductModal\n        });\n    \n\n    }\n    deleteProduct(id){\n        axios.delete('http://localhost/api/view/product.php?id=' + id).then((response) => {\n          this._refreshProduct();          \n             console.log(response);\n         })\n         .catch(function (error) {\n             //handle error\n             console.log(error);\n         });\n    }\n    _refreshProduct(){\n        axios.get('http://localhost/api/view/product.php')\n        .then((response) => {\n            this.setState({\n                items: response.data\n            })\n\n            console.log(this.state.items)\n\n        })\n        .catch(function (error) {\n            //handle error\n            console.log(error);\n        });\n\n    }\n    render() {\n        let items = this.state.items.map((item) => {\n            return (\n                <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>{item.nombre_producto}</td>\n                    <td>{item.referencia}</td>\n                    <td>{item.precio}</td>\n                    <td>{item.peso}</td>\n                    <td>{item.categoria}</td>\n                    <td>{item.stock}</td>\n                    <td>{item.fecha_creacion}</td>\n                    <td>{item.fecha_venta}</td>\n                    <td>\n                    <Button color=\"success\" size=\"sm\" onClick={this.editProduct.bind(this, item.id, item.nombre_producto, item.referencia, item.precio, item.peso, item.categoria, item.stock, item.fecha_venta)}>Editar</Button> \n                    <Button color=\"danger\" onClick={this.deleteProduct.bind(this, item.id)} size=\"sm\">Eliminar</Button>\n                    </td>\n                </tr>\n            )\n\n        });\n        return (\n            <div className=\"container\">\n                <h1>Aplicación producto</h1>\n                \n                <Button color=\"primary\" onClick={this.toggleNewProductModal.bind(this)}>Agregar producto</Button>\n\n                <Modal isOpen={this.state.newProductModal} toggle={this.toggleNewProductModal.bind(this)}>\n                    <ModalHeader toggle={this.toggleNewProductModal.bind(this)}>Agregar producto </ModalHeader>\n                    <ModalBody>\n                    <FormGroup>\n                    <Label for=\"nombre del producto\">Nombre del producto</Label>\n                    <Input type=\"text\" id=\"nombre_producto\"  placeholder=\"ingresar normbre del producto\" value={this.state.newProductData.nombre_producto}\n                    onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.nombre_producto = e.target.value;\n                        this.setState({newProductData});\n                    }} />\n                     </FormGroup>\n                     <FormGroup>\n                    <Label for=\"referencia\">Referencia</Label>\n                    <Input type=\"number\" id=\"referencia\" placeholder=\"ingresar referencia\" value={this.state.newProductData.referencia}\n                    onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.referencia = e.target.value;\n                        this.setState({newProductData});\n                    }} />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"precio\">Precio</Label>\n                    <Input type=\"number\" name=\"precio\" id=\"precio\" placeholder=\"ingresar precio\" value={this.state.newProductData.precio}\n                     onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.precio = e.target.value;\n                        this.setState({newProductData});\n                    }}\n                     />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"peso\">Peso</Label>\n                    <Input type=\"number\" name=\"peso\" id=\"peso\" placeholder=\"ingresar peso\" value={this.state.newProductData.peso}\n                     onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.peso = e.target.value;\n                        this.setState({newProductData});\n                    }}\n                     />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"categoria\">Categoría</Label>\n                    <Input type=\"text\" name=\"categoria\" id=\"categoria\" placeholder=\"ingresar categoria\" value={this.state.newProductData.categoria}\n                     onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.categoria = e.target.value;\n                        this.setState({newProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"stock\">Stock</Label>\n                    <Input type=\"text\" name=\"stock\" id=\"stock\" placeholder=\"ingresar stock\" value={this.state.newProductData.stock}\n                    onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.stock = e.target.value;\n                        this.setState({newProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    <FormGroup>                    \n                    <Label for=\"fecha_venta\">Fecha venta</Label>\n                    <Input\n                    type=\"datetime\"\n                    name=\"fecha_venta\"\n                    id=\"fecha_venta\"\n                    placeholder=\"ingresar fecha venta\"\n                    value={this.state.newProductData.fecha_venta}\n                    onChange={(e) => {\n                        let {newProductData} = this.state;\n                        newProductData.fecha_venta = e.target.value;\n                        this.setState({newProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.addProduct.bind(this)}>Agregar</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggleNewProductModal.bind(this)}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n                <Modal isOpen={this.state.editProductModal} toggle={this.toggleEditProductModal.bind(this)}>\n                    <ModalHeader toggle={this.toggleEditProductModal.bind(this)}>Editar producto </ModalHeader>\n                    <ModalBody>\n                    <FormGroup>\n                    <Label for=\"nombre del producto\">Nombre del producto</Label>\n                    <Input type=\"text\" id=\"nombre_producto\"  placeholder=\"ingresar normbre del producto\" value={this.state.editProductData.nombre_producto}\n                    onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.nombre_producto = e.target.value;\n                        this.setState({editProductData});\n                    }} />\n                     </FormGroup>\n                     <FormGroup>\n                    <Label for=\"referencia\">Referencia</Label>\n                    <Input type=\"number\" id=\"referencia\" placeholder=\"ingresar referencia\" value={this.state.editProductData.referencia}\n                    onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.referencia = e.target.value;\n                        this.setState({editProductData});\n                    }} />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"precio\">Precio</Label>\n                    <Input type=\"number\" name=\"precio\" id=\"precio\" placeholder=\"ingresar precio\" value={this.state.editProductData.precio}\n                     onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.precio = e.target.value;\n                        this.setState({editProductData});\n                    }}\n                     />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"peso\">Peso</Label>\n                    <Input type=\"number\" name=\"peso\" id=\"peso\" placeholder=\"ingresar peso\" value={this.state.editProductData.peso}\n                     onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.peso = e.target.value;\n                        this.setState({editProductData});\n                    }}\n                     />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"categoria\">Categoría</Label>\n                    <Input type=\"text\" name=\"categoria\" id=\"categoria\" placeholder=\"ingresar categoria\" value={this.state.editProductData.categoria}\n                     onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.categoria = e.target.value;\n                        this.setState({editProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    <FormGroup>\n                    <Label for=\"stock\">Stock</Label>\n                    <Input type=\"text\" name=\"stock\" id=\"stock\" placeholder=\"ingresar stock\" value={this.state.editProductData.stock}\n                    onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.stock = e.target.value;\n                        this.setState({editProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    <FormGroup>                    \n                    <Label for=\"fecha_venta\">Fecha venta</Label>\n                    <Input\n                    type=\"datetime\"\n                    name=\"fecha_venta\"\n                    id=\"fecha_venta\"\n                    placeholder=\"ingresar fecha venta\"\n                    value={this.state.editProductData.fecha_venta}\n                    onChange={(e) => {\n                        let {editProductData} = this.state;\n                        editProductData.fecha_venta = e.target.value;\n                        this.setState({editProductData});\n                    }}\n                    />\n                    </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.updateProduct.bind(this)}>Editar</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggleEditProductModal.bind(this)}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Nombre de producto</th>\n                            <th>Referencia</th>\n                            <th>Precio</th>\n                            <th>Peso</th>\n                            <th>Categoria</th>\n                            <th>Stock</th>\n                            <th>Fecha de creación</th>\n                            <th>Fecha de Venta</th>\n                            <th>Acciones</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n\n\n\n}\n\nContainerProduct.propTypes = {\n\n\n}\n\nexport default ContainerProduct\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ContainerProduct from './components/ContainerProduct';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(  \n      <ContainerProduct name=\"123\"/>,  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}